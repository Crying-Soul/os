#!/bin/bash
# =============================================================================
# Скрипт демонстрации работы с pipe (каналами) в Linux
# =============================================================================
# Цель:
# Демонстрация различных аспектов работы с pipe (каналами) в Linux, включая
# создание, перенаправление ввода/вывода и анализ ограничений. Скрипт
# демонстрирует как анонимные, так и именованные каналы, а также предоставляет
# информацию о системных ограничениях, связанных с использованием каналов.
#
# Описание:
# Скрипт выполняет следующие действия:
# 1. Демонстрирует анонимные каналы с помощью простых команд (ls, grep, seq, ps, wc)
# 2. Выводит информацию о системных ограничениях, связанных с каналами:
#     - Максимальный размер буфера pipe
#     - Ограничения на количество pipe для пользователя
#     - Общие ограничения на открытые файлы
#     - Размер страницы памяти
# 3. Предоставляет информацию о конфигурационных файлах для настройки ограничений.
# 4. Компилирует и запускает три программы на C:
#     - simple_pipe.c: Простой пример передачи сообщения через pipe.
#     - dual_pipe.c: Двусторонний обмен данными через два pipe.
#     - pipe_exec.c: Использование pipe и dup2 для перенаправления ввода/вывода.
# 5. Трассирует системные вызовы, выполняемые программами на C, с помощью strace.
# 6. Удаляет исполняемые файлы после завершения демонстрации.
#
# Зависимости:
#   - gcc
#   - strace
#   - coreutils (ls, grep, seq, ps, wc, cat, stat)
#
# Использование:
#   Запустите скрипт без аргументов.
#
# Примечания:
#   - Скрипт предполагает, что необходимые утилиты (gcc, strace, coreutils)
#     установлены в системе.
#   - Для просмотра всех системных вызовов можно убрать фильтрацию strace.
#   - Именованные каналы (FIFO) не включены в этот скрипт, так как они создаются
#     в ЗАДАНИИ 6.2
# =============================================================================

cd 6/6.1
echo "=============================================="
echo "                  ЗАДАНИЕ 6.1                 "
echo "=============================================="
echo "================================================"
echo " ДЕМОНСТРАЦИЯ РАБОТЫ С PIPE (КАНАЛАМИ) В LINUX"
echo "================================================"
echo

# Раздел 1: Анонимные каналы (pipe)
echo "1. ДЕМОНСТРАЦИЯ АНОНИМНЫХ КАНАЛОВ (PIPE)"
echo "----------------------------------------"

echo "Пример 1.1: Простой pipe между ls и grep"
echo "Команда: ls -l | grep '.txt'"
ls -l | grep ".txt"
echo

echo "Пример 1.2: Цепочка из нескольких команд"
echo "Команда: seq 1 20 | grep '1' | sort -nr"
seq 1 20 | grep "1" | sort -nr
echo

echo "Пример 1.3: Подсчет количества процессов пользователя"
echo "Команда: ps -u $USER | wc -l"
ps -u $USER | wc -l
echo

# Раздел 2: Системные ограничения для pipe
echo "2. СИСТЕМНЫЕ ОГРАНИЧЕНИЯ ДЛЯ PIPE"
echo "----------------------------------"

echo "Текущие ограничения системы для pipe:"
echo

echo "2.1 Максимальный размер буфера pipe:"
echo "Команда: cat /proc/sys/fs/pipe-max-size"
PIPE_MAX_SIZE=$(cat /proc/sys/fs/pipe-max-size 2>/dev/null)
echo "PIPE_MAX_SIZE: ${PIPE_MAX_SIZE:-Недоступно}"
echo "Это значение можно изменить через /etc/sysctl.conf"
echo

echo "2.2 Ограничения на количество pipe для пользователя:"
echo "Команда: cat /proc/sys/fs/pipe-user-pages-{hard,soft}"
PIPE_USER_HARD=$(cat /proc/sys/fs/pipe-user-pages-hard 2>/dev/null)
PIPE_USER_SOFT=$(cat /proc/sys/fs/pipe-user-pages-soft 2>/dev/null)
echo "PIPE_USER_HARD: ${PIPE_USER_HARD:-Недоступно}"
echo "PIPE_USER_SOFT: ${PIPE_USER_SOFT:-Недоступно}"
echo

echo "2.3 Общие ограничения на открытые файлы (включая pipe):"
echo "Команда: ulimit -n"
ULIMIT_N=$(ulimit -n)
echo "ULIMIT -n: $ULIMIT_N"
echo "Это значение можно настроить в /etc/security/limits.conf"
echo

echo "2.4 Размер страницы памяти:"
echo "Команда: getconf PAGESIZE"
PAGESIZE=$(getconf PAGESIZE)
echo "PAGESIZE: $PAGESIZE байт"
echo

# Раздел 3: Просмотр конфигурационных файлов с ограничениями
echo "3. КОНФИГУРАЦИОННЫЕ ФАЙЛЫ ДЛЯ НАСТРОЙКИ PIPE"
echo "--------------------------------------------"

echo "3.3 Дополнительные файлы с ограничениями:"
echo "Файл: /proc/sys/fs/pipe-max-size"
echo "Значение: $(cat /proc/sys/fs/pipe-max-size 2>/dev/null || echo Недоступно)"
echo

echo "3.4 Информация о текущем использовании pipe:"
echo "Команда: lsof | grep 'pipe' | wc -l"
echo "Текущее количество открытых pipe: $(lsof | grep 'pipe' | wc -l)"

########6.1####
gcc -o simple_pipe simple_pipe.c
gcc -o dual_pipe dual_pipe.c
gcc -o pipe_exec pipe_exec.c

echo "======================6.1=========================="

echo "ЗАПУСК simple_pipe:"
echo "Эта программа демонстрирует:"
echo " - Создание pipe"
echo " - Создание дочернего процесса fork()"
echo " - Передачу одного сообщения от родителя к потомку"
echo "Ожидаемый вывод:"
echo "Родительский процесс отправляет сообщение"
echo "Дочерний процесс получает это сообщение"
echo "------------------ НАЧАЛО ВЫВОДА ------------------"
strace -f -e trace=pipe,read,write ./simple_pipe
echo "------------------ КОНЕЦ ВЫВОДА -------------------"


echo "ЗАПУСК dual_pipe:"
echo "Эта программа демонстрирует:"
echo " - Создание двух pipe для двустороннего обмена"
echo " - Родитель отправляет сообщение потомку"
echo " - Потомок отвечает на сообщение"
echo "Ожидаемый вывод:"
echo "Родитель отправляет -> потомок получает"
echo "Потомок отправляет ответ -> родитель получает"
echo "------------------ НАЧАЛО ВЫВОДА ------------------"
strace -f -e trace=pipe,read,write  ./dual_pipe
echo "------------------ КОНЕЦ ВЫВОДА -------------------"
echo

echo "ЗАПУСК pipe_exec:"
echo "Эта программа демонстрирует:"
echo " - Создание pipe"
echo " - Перенаправление вывода с помощью dup2()"
echo " - Запуск программы wc -l для подсчета строк"
echo "Ожидаемый вывод:"
echo "Программа должна вывести число 3 (три строки было записано в pipe)"
echo "------------------ НАЧАЛО ВЫВОДА ------------------"
strace -f -e trace=pipe,read,write  ./pipe_exec
echo "------------------ КОНЕЦ ВЫВОДА -------------------"
echo

rm simple_pipe dual_pipe pipe_exec


